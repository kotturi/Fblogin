<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="Jenkin">
    <property environment="env"/>
        
    <property name="ECLIPSE_HOME" value="../../Downloads/eclipse/"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="Jenkin.classpath">
        <pathelement location="bin"/>
        <pathelement location="../../selenium-server-standalone-2.45.0.jar"/>
    </path>
    
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    
    <target name="prepare" depends="clean" description="Create working dirs and copy static files to work dir"><mkdir dir="${dist.home}"/>
        <mkdir dir="${work.home}/WEB-INF/classes"/>
        <!-- Copy static HTML and JSP files to work dir -->
<!--<copy todir="${work.home}"><fileset dir="${src.Demos}"/></copy>-->

</target>

    <target name="compile" depends="prepare" description="Compile Java sources and copy to WEB-INF/classes dir">
        <javac srcdir="${src.home}" destdir="${work.home}/WEB-INF/classes">
            <classpath refid="compile.classpath"/>
            </javac>
            <copy todir="${work.home}/WEB-INF/classes">
                <fileset dir="${src.home}" excludes="**/*.java"/>
            </copy>
          
    </target>
    <target name="dist" depends="compile" description="Create WAR file for binary distribution">
           <jar jarfile="${dist.home}/${app.name}-${app.version}.war" basedir="${work.home}"/>
    </target>
    
    
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Jenkin.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
            </target>
            
    <target name="war" description="Bundles the application as a WAR file" depends="clean, build">
    <mkdir dir="WebContent/WEB-INF/classes"/>
     
    <copy includeemptydirs="false" todir="WebContent/WEB-INF/classes">
            <fileset dir="build/classes">
            <include name="**/*.class"/>
            </fileset>
    </copy>
     
    <war destfile="UploadServlet30.war"
        basedir="WebContent"
        needxmlfile="false">
    </war>
</target>
</project>
